<?php

namespace App\Models;

use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;
use Illuminate\Support\Facades\Mail;

class User extends Authenticatable
{
    use HasFactory, Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'name',
        'username',
        'email',
        'password',
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password',
        'remember_token',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];


    protected static function boot()
    {
        parent::boot(); 
        // todo:: change the autogenerated stub
        //event that gets fired, after new user was created, here we can create profile for new user
        //give some default values
        static::created(function($user){
            $user->profile()->create([
                'title' => $user->username,
            ]);

            //not the best way to do this in real proj, but for learning purpose is ok:
            Mail::to($user->email)
            ->send(new \App\Mail\NewUserWelcomeMail());

        });

    }


    public function posts()
    {
        // ordered by creation time in descending order (last uploaded pics are first)
        return $this->hasMany(Post::class)->orderBy('created_at', 'DESC'); // one-to-many relationship
    }

    public function following()
    {
        return $this->belongsToMany(Profile::class);
    }

    public function profile()
    {
        return $this->hasOne(Profile::class); // one-to-one relationship
    }

}
